# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-05-25 11:49
from __future__ import unicode_literals

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DNSServerRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.TextField(blank=True, null=True)),
                ('domain_admin', models.TextField(blank=True, null=True)),
                ('domain_company', models.TextField(blank=True, null=True)),
                ('domain_email', models.TextField(blank=True, null=True)),
                ('domain_phone', models.TextField(blank=True, null=True)),
                ('domain_create_time', models.TextField(blank=True, null=True)),
                ('domain_expire_time', models.TextField(blank=True, null=True)),
                ('domain_update_time', models.TextField(blank=True, null=True)),
                ('domain_city', models.TextField(blank=True, null=True)),
                ('domain_location', models.TextField(blank=True, null=True)),
                ('domain_isp', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DomainBeian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.TextField(blank=True, null=True)),
                ('company_name', models.TextField(blank=True, null=True)),
                ('domain_type', models.TextField(blank=True, null=True)),
                ('icp_code', models.TextField(blank=True, null=True)),
                ('beian_id', models.IntegerField(default=0)),
                ('insert_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DomainIpRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.TextField(blank=True, null=True)),
                ('data_tag', models.TextField(blank=True, null=True)),
                ('ip_range', models.TextField(blank=True, null=True)),
                ('fuzz_time', models.DateTimeField(blank=True, null=True)),
                ('fuzzall_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FnascanResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField()),
                ('ip', models.TextField(blank=True, null=True)),
                ('port', models.CharField(max_length=10)),
                ('service_name', models.TextField(blank=True, default=b'', null=True)),
                ('web_title', models.TextField(blank=True, default=b'', null=True)),
                ('service_detail', models.TextField(blank=True, default=b'', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HttpFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(blank=True, default=b'', max_length=250)),
                ('path', models.CharField(blank=True, default=b'', max_length=2500)),
                ('isPost', models.IntegerField(blank=True, default=2)),
                ('postData', models.TextField(blank=True, default=b'')),
                ('filetype', models.CharField(blank=True, default=b'', max_length=250)),
                ('isComplete', models.IntegerField(blank=True, default=2)),
            ],
        ),
        migrations.CreateModel(
            name='ICPCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.TextField(blank=True, null=True)),
                ('co_name', models.TextField(blank=True, null=True)),
                ('domain_type', models.TextField(blank=True, null=True)),
                ('domain_title', models.TextField(blank=True, null=True)),
                ('check_time', models.TextField(blank=True, null=True)),
                ('icp_code', models.TextField(blank=True, null=True)),
                ('icp_code_2', models.TextField(blank=True, null=True)),
                ('beian_id', models.IntegerField(default=0)),
                ('insert_time', models.DateTimeField(blank=True, default=datetime.datetime(2016, 5, 25, 19, 49, 12, 618000), null=True)),
                ('byhand', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='IpPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField()),
                ('ip_address', models.CharField(blank=True, default=b'', max_length=256)),
                ('is_up', models.IntegerField(blank=True, default=0)),
                ('os', models.CharField(blank=True, default=b'', max_length=256)),
                ('inserted_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PortsServicesPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField()),
                ('ip_address', models.CharField(blank=True, default=b'', max_length=256)),
                ('is_up', models.IntegerField(blank=True, default=0)),
                ('os', models.CharField(blank=True, default=b'', max_length=256)),
                ('inserted_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.TextField()),
                ('poc_file', models.TextField(default=b'', null=True)),
                ('result', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_fixed', models.NullBooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PTasks_status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domains', models.TextField()),
                ('task_name', models.TextField()),
                ('status', models.NullBooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Req_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=5, verbose_name=b'METHOD')),
                ('host', models.CharField(max_length=40, verbose_name=b'HOST')),
                ('uri', models.CharField(default=b'/', max_length=100, verbose_name=b'FILE')),
                ('url', models.TextField(verbose_name=b'URL')),
                ('ua', models.TextField(verbose_name=b'User-agent')),
                ('referer', models.TextField(null=True, verbose_name=b'REFERER')),
                ('data', models.TextField(null=True, verbose_name=b'REQUEST BODY')),
                ('cookie', models.TextField(default=b'', verbose_name=b'COOKIE')),
            ],
        ),
        migrations.CreateModel(
            name='RequestsFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=5, verbose_name=b'METHOD')),
                ('host', models.CharField(max_length=40, verbose_name=b'HOST')),
                ('uri', models.CharField(default=b'/', max_length=100, verbose_name=b'FILE')),
                ('url', models.TextField(verbose_name=b'URL')),
                ('ua', models.TextField(verbose_name=b'User-agent')),
                ('referer', models.TextField(null=True, verbose_name=b'REFERER')),
                ('data', models.TextField(null=True, verbose_name=b'REQUEST BODY')),
                ('cookie', models.TextField(default=b'', verbose_name=b'COOKIE')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(blank=True, default=b'', max_length=128)),
                ('detail', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField()),
                ('ip', models.TextField(blank=True, null=True)),
                ('port', models.CharField(max_length=10)),
                ('service_name', models.TextField(blank=True, default=b'', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SiteDesc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.TextField(blank=True, null=True)),
                ('port', models.CharField(blank=True, max_length=10, null=True)),
                ('site_title', models.TextField(blank=True, default=b'')),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default=b'WAITTING', max_length=32)),
                ('result', models.CharField(blank=True, default=b'', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='SubDomainBrute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.TextField(blank=True, null=True)),
                ('sub_domain', models.TextField(blank=True, null=True)),
                ('sub_ip', models.TextField(blank=True, null=True)),
                ('c_range', models.TextField(blank=True, null=True)),
                ('fuzz_time', models.DateTimeField(blank=True, default=datetime.datetime(2016, 5, 25, 19, 49, 12, 620000), null=True)),
                ('fuzzall_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SubDomainBruteTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.TextField(blank=True, null=True)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default=b'WAITTING', max_length=32)),
                ('result', models.CharField(blank=True, default=b'', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='SubTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(blank=True, default=b'', max_length=128)),
                ('task_name', models.CharField(blank=True, default=b'', max_length=128)),
                ('attack_type', models.CharField(blank=True, default=b'', max_length=128)),
                ('attack_target', models.CharField(blank=True, default=b'', max_length=256)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=32)),
                ('except_message', models.CharField(blank=True, default=b'', max_length=256)),
                ('for_recover_data', models.TextField(blank=True, default=b'')),
                ('parameter', models.CharField(default=b'', max_length=512)),
                ('root_url', models.CharField(max_length=512)),
                ('site', models.CharField(blank=True, default=b'', max_length=128)),
                ('degree_detail', models.CharField(blank=True, default=b'', max_length=512)),
                ('scan_result', models.CharField(blank=True, default=b'', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(blank=True, default=b'', max_length=128)),
                ('task_name', models.CharField(blank=True, default=b'', max_length=128)),
                ('attack_type', models.CharField(blank=True, default=b'', max_length=128)),
                ('attack_target', models.CharField(blank=True, default=b'', max_length=256)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=32)),
                ('except_message', models.CharField(blank=True, default=b'', max_length=256)),
                ('for_recover_data', models.TextField(blank=True, default=b'')),
                ('parameter', models.CharField(default=b'', max_length=512)),
                ('root_url', models.CharField(max_length=512)),
                ('site', models.CharField(blank=True, default=b'', max_length=128)),
                ('degree_detail', models.CharField(blank=True, default=b'', max_length=512)),
                ('scan_result', models.CharField(blank=True, default=b'', max_length=256)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='requestsflow',
            unique_together=set([('method', 'host', 'uri')]),
        ),
        migrations.AlterUniqueTogether(
            name='req_list',
            unique_together=set([('method', 'host', 'uri')]),
        ),
    ]
